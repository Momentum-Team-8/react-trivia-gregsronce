[{"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/index.js":"1","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/App.js":"2","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/reportWebVitals.js":"3","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/api.js":"4","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryList.js":"5","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js":"6","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/AnswerChoices.js":"7"},{"size":500,"mtime":1626120424428,"results":"8","hashOfConfig":"9"},{"size":777,"mtime":1626361120689,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1626120424428,"results":"11","hashOfConfig":"9"},{"size":340,"mtime":1626346950869,"results":"12","hashOfConfig":"9"},{"size":608,"mtime":1626451192924,"results":"13","hashOfConfig":"9"},{"size":2088,"mtime":1626451636715,"results":"14","hashOfConfig":"9"},{"size":656,"mtime":1626451114693,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"53kcxs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/index.js",[],["32","33"],"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/App.js",[],"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/reportWebVitals.js",[],"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/api.js",[],"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryList.js",[],"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js",["34","35"],"import React, { useEffect, useState } from 'react'\nimport { getCategoryData } from '../api'\nimport he from 'he'\nimport { AnswerChoices } from './AnswerChoices'\n\nexport const CategoryData = (props) => {\n  const [categoryData, setCategoryData] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [answered, setAnswered] = useState(false)\n  const [correct, setCorrect] = useState(false)\n  const { selectedCategory } = props\n  const refreshPage = () => {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      setCategoryData(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n  const commitAnswer = () => {\n    if (correct) {\n      console.log('You answered ', correct)\n    }\n    setAnswered(false)\n  }\n\n  return loading\n    ? 'Category data is loading'\n    : (\n      <>\n        <div className='category-header'>\n          <p className='title hero is-info'>{selectedCategory.name}</p>\n          <button className='button is-primary' onClick={refreshPage}>Back to Category List</button>\n        </div>\n        <div className='questions'>\n          {categoryData.map((data) => {\n            return (\n              <div key={data.question}>\n                <p><strong>{he.decode(data.question)}</strong></p>\n                <section key={data.question}>\n                  <AnswerChoices\n                    answers={{ correctAnswer: he.escape(data.correct_answer), incorrectAnswers: data.incorrect_answers }}\n                    checkAnswer={setCorrect}\n                    setAnswered={setAnswered}\n                    commitAnswer={commitAnswer}\n                  />\n                </section>\n              </div>\n            )\n          })}\n        </div>\n      </>\n      )\n}\n\n{/* <ul>\n<li>{he.decode(data.correct_answer)}</li>\n<li className='incorrect-answers'> {data.incorrect_answers[0]}</li>\n{data.incorrect_answers &&\n  <li className='incorrect-answers'> {data.incorrect_answers[1]}</li>\n}\n{data.incorrect_answers &&\n  <li className='incorrect-answers'> {data.incorrect_answers[2]}</li>\n}\n</ul> */}","/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/AnswerChoices.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":9,"column":10,"nodeType":"42","messageId":"43","endLine":9,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":58,"column":1,"nodeType":"46","messageId":"47","endLine":67,"endColumn":10},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'answered' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]