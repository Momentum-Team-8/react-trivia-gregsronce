{"ast":null,"code":"var _jsxFileName = \"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCategoryData } from '../api';\nimport he from 'he';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryData = props => {\n  _s();\n\n  const [categoryData, setCategoryData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      setCategoryData(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Category data is loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title hero is-info\",\n        children: selectedCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onClick: refreshPage,\n        children: \"Back to Category List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: categoryData.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: he.decode(data.question)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: he.decode(data.correct_answer)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"incorrect-answers\",\n              children: [\" \", he.decode(data.incorrect_answers[0])]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), data.incorrect_answers && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"incorrect-answers\",\n              children: [\" \", he.decode(data.incorrect_answers[1])]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), data.incorrect_answers && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"incorrect-answers\",\n              children: [\" \", data.incorrect_answers[2]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, data.question, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CategoryData, \"+OQypYGyItELFJPJLDFPIuY0YQM=\");\n\n_c = CategoryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryData\");","map":{"version":3,"sources":["/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js"],"names":["React","useEffect","useState","getCategoryData","he","CategoryData","props","categoryData","setCategoryData","loading","setLoading","selectedCategory","refreshPage","window","location","reload","then","data","name","map","decode","question","correct_answer","incorrect_answers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,EAAP,MAAe,IAAf;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAuBL,KAA7B;;AACA,QAAMM,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACQ,gBAAD,CAAf,CAAkCK,IAAlC,CAAuCC,IAAI,IAAI;AAC7CT,MAAAA,eAAe,CAACS,IAAD,CAAf;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,0BADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA,kBAAmCE,gBAAgB,CAACO;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEN,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGL,YAAY,CAACY,GAAb,CAAkBF,IAAD,IAAU;AAC1B,4BACE;AAAA,kCACE;AAAA,mCAAG;AAAA,wBAASb,EAAE,CAACgB,MAAH,CAAUH,IAAI,CAACI,QAAf;AAAT;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AAAA,wBAAKjB,EAAE,CAACgB,MAAH,CAAUH,IAAI,CAACK,cAAf;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,8BAAoClB,EAAE,CAACgB,MAAH,CAAUH,IAAI,CAACM,iBAAL,CAAuB,CAAvB,CAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGN,IAAI,CAACM,iBAAL,iBACC;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,8BAAoCnB,EAAE,CAACgB,MAAH,CAAUH,IAAI,CAACM,iBAAL,CAAuB,CAAvB,CAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAMGN,IAAI,CAACM,iBAAL,iBACC;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,8BAAoCN,IAAI,CAACM,iBAAL,CAAuB,CAAvB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUN,IAAI,CAACI,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBA;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBAHJ;AA6BD,CA5CM;;GAAMhB,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getCategoryData } from '../api'\nimport he from 'he'\n\nexport const CategoryData = (props) => {\n  const [categoryData, setCategoryData] = useState({})\n  const [loading, setLoading] = useState(true)\n  const { selectedCategory } = props\n  const refreshPage = () => {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      setCategoryData(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Category data is loading'\n    : (\n      <>\n        <div className='category-header'>\n          <p className='title hero is-info'>{selectedCategory.name}</p>\n          <button className='button is-primary' onClick={refreshPage}>Back to Category List</button>\n        </div>\n        <div className='questions'>\n          {categoryData.map((data) => {\n            return (\n              <div key={data.question}>\n                <p><strong>{he.decode(data.question)}</strong></p>\n                <ul>\n                  <li>{he.decode(data.correct_answer)}</li>\n                  <li className='incorrect-answers'> {he.decode(data.incorrect_answers[0])}</li>\n                  {data.incorrect_answers &&\n                    <li className='incorrect-answers'> {he.decode(data.incorrect_answers[1])}</li>\n                  }\n                  {data.incorrect_answers &&\n                    <li className='incorrect-answers'> {data.incorrect_answers[2]}</li>\n                  }\n                </ul>\n              </div>\n            )\n          })}\n        </div>\n      </>\n      )\n}"]},"metadata":{},"sourceType":"module"}