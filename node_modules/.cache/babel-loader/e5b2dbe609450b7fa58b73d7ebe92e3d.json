{"ast":null,"code":"var _jsxFileName = \"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCategoryData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryData = props => {\n  _s();\n\n  const [categoryData, setCategoryData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      setCategoryData(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Category data is loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Back to Category List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: categoryData.map(data => {\n        console.log(data.category);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, data.category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CategoryData, \"+OQypYGyItELFJPJLDFPIuY0YQM=\");\n\n_c = CategoryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryData\");","map":{"version":3,"sources":["/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js"],"names":["React","useEffect","useState","getCategoryData","CategoryData","props","categoryData","setCategoryData","loading","setLoading","selectedCategory","then","data","map","console","log","category","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,QAAhC;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBL,KAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACO,gBAAD,CAAf,CAAkCC,IAAlC,CAAuCC,IAAI,IAAI;AAC7CL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,0BADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGF,YAAY,CAACO,GAAb,CAAkBD,IAAD,IAAU;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAjB;AACF,4BACE;AAAA,iCACE;AAAA,sBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,WAAUL,IAAI,CAACI,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAPA;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBAHJ;AAmBD,CAhCM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getCategoryData } from '../api'\n\nexport const CategoryData = (props) => {\n  const [categoryData, setCategoryData] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory } = props\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      setCategoryData(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Category data is loading'\n    : (\n      <>\n        <div className='header'>\n          <button className='button'>Back to Category List</button>\n        </div>\n        <div className='div'>\n          {categoryData.map((data) => {\n              console.log(data.category)\n            return (\n              <div key={data.category}>\n                <p>{data.question}</p>\n              </div>\n            )\n          })}\n        </div>\n      </>\n      )\n}"]},"metadata":{},"sourceType":"module"}