{"ast":null,"code":"var _jsxFileName = \"/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCategoryData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryData = props => {\n  _s();\n\n  const [categoryData, setCategoryData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      console.log(data);\n      setCategoryData(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Category data is loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: selectedCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onClick: refreshPage,\n        children: \"Back to Category List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: categoryData.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: data.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.correct_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"incorrect-answers\",\n            children: [\" \", data.incorrect_answers[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), data.incorrect_answers && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"incorrect-answers\",\n            children: [\" \", data.incorrect_answers[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), data.incorrect_answers && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"incorrect-answers\",\n            children: [\" \", data.incorrect_answers[2]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)]\n        }, data.question, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CategoryData, \"+OQypYGyItELFJPJLDFPIuY0YQM=\");\n\n_c = CategoryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryData\");","map":{"version":3,"sources":["/Users/gregsronce/momentum-assignments/react-trivia-gregsronce/trivia/src/components/CategoryData.js"],"names":["React","useEffect","useState","getCategoryData","CategoryData","props","categoryData","setCategoryData","loading","setLoading","selectedCategory","refreshPage","window","location","reload","then","data","console","log","name","map","question","correct_answer","incorrect_answers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,QAAhC;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBL,KAA7B;;AACA,QAAMM,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACO,gBAAD,CAAf,CAAkCK,IAAlC,CAAuCC,IAAI,IAAI;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,eAAe,CAACS,IAAD,CAAf;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GANQ,EAMN,CAACC,gBAAD,CANM,CAAT;AAQA,SAAOF,OAAO,GACV,0BADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBE,gBAAgB,CAACS;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAER,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGL,YAAY,CAACc,GAAb,CAAkBJ,IAAD,IAAU;AAC1B,4BACE;AAAA,kCACE;AAAA,mCAAG;AAAA,wBAASA,IAAI,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA,sBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,4BAAmCN,IAAI,CAACO,iBAAL,CAAuB,CAAvB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKGP,IAAI,CAACO,iBAAL,iBACC;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,4BAAmCP,IAAI,CAACO,iBAAL,CAAuB,CAAvB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,EAQGP,IAAI,CAACO,iBAAL,iBACC;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,4BAAmCP,IAAI,CAACO,iBAAL,CAAuB,CAAvB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAAUP,IAAI,CAACK,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAfA;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBAHJ;AA4BD,CA5CM;;GAAMjB,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getCategoryData } from '../api'\n\nexport const CategoryData = (props) => {\n  const [categoryData, setCategoryData] = useState({})\n  const [loading, setLoading] = useState(true)\n  const { selectedCategory } = props\n  const refreshPage = () => {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    getCategoryData(selectedCategory).then(data => {\n      console.log(data)\n      setCategoryData(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Category data is loading'\n    : (\n      <>\n        <div className='header'>\n          <p className='title'>{selectedCategory.name}</p>\n          <button className='button is-primary' onClick={refreshPage}>Back to Category List</button>\n        </div>\n        <div className='div'>\n          {categoryData.map((data) => {\n            return (\n              <div key={data.question}>\n                <p><strong>{data.question}</strong></p>\n                \n                <p>{data.correct_answer}</p>\n                <p className='incorrect-answers'> {data.incorrect_answers[0]}</p>\n                {data.incorrect_answers &&\n                  <p className='incorrect-answers'> {data.incorrect_answers[1]}</p>\n                }\n                {data.incorrect_answers &&\n                  <p className='incorrect-answers'> {data.incorrect_answers[2]}</p>\n                }\n              </div>\n            )\n          })}\n        </div>\n      </>\n      )\n}"]},"metadata":{},"sourceType":"module"}